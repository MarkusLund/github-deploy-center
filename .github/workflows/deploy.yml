name: Deploy

on:
  workflow_dispatch:
    inputs:
      release:
        description: Which release version to deploy (e.g. v1.0.3)
        required: true
      environment:
        description: Which environment to deploy to (dev, test or prod)
        required: true

env:
  GITHUB_TOKEN: ${{ github.token }}
  ENVIRONMENT: ${{ github.event.inputs.environment }}
  RELEASE: ${{ github.event.inputs.release }}
  AZCOPY_SPA_CLIENT_SECRET: ${{ secrets.AZCOPY_SPA_CLIENT_SECRET }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Validate environment
        if: env.ENVIRONMENT != 'dev' && env.ENVIRONMENT != 'test' && env.ENVIRONMENT != 'prod'
        run: echo "::error::Invalid environment $ENVIRONMENT" && exit 1

      - name: Validate release
        uses: octokit/request-action@v2.x  
        with:
          route: GET /repos/${{ github.repository }}/releases/${{ env.RELEASE }}

      - name: Create deployment
        id: create_deployment
        uses: avakar/create-deployment@8711a60d47672e4d77a3d1298802410a9edc877e
        with:
          environment: ${{ env.ENVIRONMENT }}
          production_environment: ${{ env.ENVIRONMENT == 'prod' }}
          description: Deployment of release ${{ env.RELEASE }} to ${{ env.ENVIRONMENT }}

      - name: Set deployment in progress
        uses: avakar/set-deployment-status@578b982d2ad5f56e50864f9e21ec354a073cd6f5
        with:
          state: in_progress
          deployment_id: ${{ steps.create_deployment.outputs.deploymnet_id }}

      - name: Download release artifact
        uses: geirsagberg/fetch-gh-release-asset@0.0.5
        with:
          version: ${{ env.RELEASE }}
          file: release.zip

      - name: Unzip release artifact
        run: unzip release.zip -d release

      - name: Download azcopy
        run: wget -O azcopy_v10.tar.gz https://aka.ms/downloadazcopy-v10-linux && tar -xf azcopy_v10.tar.gz --strip-components=1

      - name: Login with Azure Service Principal
        run: azcopy login --service-principal --application-id 6059feb3-4e4d-448a-ae16-73c8be36ef57

      - name: Set storage account
        run: |
          echo "STORAGE_ACCOUNT=${{ env.ENVIRONMENT == 'prod' && 'githubdeploy' || env.ENVIRONMENT == 'test' && 'githubdeploytest' || 'githubdeploydev' }}" >> $GITHUB_ENV

      - name: Copy files to Azure Storage
        run: cd release && azcopy copy . "https://${STORAGE_ACCOUNT}.blob.core.windows.net/$web" --recursive

      - name: Update deployment status
        uses: avakar/set-deployment-status@578b982d2ad5f56e50864f9e21ec354a073cd6f5
        if: always()
        with:
          deployment_id: ${{ steps.create_deployment.outputs.deployment_id }}
          state: ${{ job.status == 'success' && 'success' || 'failure' }}
